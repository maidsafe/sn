# E2E workflow.
#
# Runs basic checks with the CLI + authenticator

name: E2E

on: pull_request

env:
  # Run all cargo commands with --verbose.
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1
  # Deny all compiler warnings.
  RUSTFLAGS: "-D warnings"
  NODE_COUNT: "43" # this should be a split section
  SAFE_AUTH_PASSPHRASE: "x"
  SAFE_AUTH_PASSWORD: "y"

jobs:
  tests:
    if: "!startsWith(github.event.pull_request.title, 'Automated version bump')"
    name: E2E tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2

      # Install Rust and required components
      - uses: actions-rs/toolchain@v1
        name: Install Rust & required components
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Mac setup timeout
        if: matrix.os == 'macos-latest'
        run: |
          brew install coreutils
          alias timeout=gtimeout

      - name: Mac isntall ripgrep
        if: matrix.os == 'macos-latest'
        run: brew install ripgrep

      - name: ubuntu isntall ripgrep
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get -y install ripgrep

      - name: windows isntall ripgrep
        if: matrix.os == 'windows-latest'
        run: choco install ripgrep

      # Cache.
      - name: Cargo cache registry, index and build
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-cache-${{ hashFiles('**/Cargo.lock') }}

      - name: Build launch local network
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      
      - run: ./target/release/launch_network
        env:
          RUST_LOG: "safe_network=debug"

      - name: Have we had a section split?
        run: ./scripts/has_split.sh

      - name: Client blob tests against local network
        shell: bash
        run: timeout 35m cargo test --release -- client_api::blob && sleep 5
      
      - name: Client transfer tests against local network
        shell: bash
        run: timeout 15m cargo test --release -- client_api::transfer && sleep 5
      
      - name: Client map tests against local network
        shell: bash
        run: timeout 15m cargo test --release -- client_api::map && sleep 5
      
      - name: Client reg tests against local network
        shell: bash
        run: timeout 15m cargo test --release -- client_api::reg && sleep 5
      
      - name: Client sequence tests against local network
        shell: bash
        run: timeout 15m cargo test --release -- client_api::seq && sleep 5
      
      # a catchall to ensure any new client api tests are run (ideally any major new section should have its own test run)
      - name: any remaining tests client...
        shell: bash
        run: timeout 15m cargo test --release client_api -- --skip client_api::seq --skip client_api::map --skip client_api::reg --skip client_api::blob --skip client_api::transfer && sleep 5
      


      - name: Run example app for Blob API against local network
        shell: bash
        run: timeout 15m cargo run --release --example client_blob


      # TODO: Upload all logs as artifacts....
      - name: Node Logs
        run: |
          ls $HOME/.safe/node/local-test-network
          cat $HOME/.safe/node/local-test-network/sn-node-genesis/sn_node.log*
        if: failure()
