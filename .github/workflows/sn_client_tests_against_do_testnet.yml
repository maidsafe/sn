name: 'sn:  DO Testnet. Client Tests'

on:
  workflow_dispatch:
    inputs:
      node-count:
        description: 'Number of nodes to be deployed'
        required: false
        default: 50
      launch-testnet:
        description: 'Launch a new tesnet? (y/n)'
        required: false
        default: 'n'
      run-client-tests:
        description: 'Run Client tests? (y/n)'
        required: false
        default: 'n'
      kill-testnet:
        description: 'Kill testnet? (y/n)'
        required: false
        default: 'n'
  pull_request_target:
    types: [ labeled ]

env:
  CARGO_INCREMENTAL: '0'
  RUST_BACKTRACE: 1

jobs:
  launch-testnet:
    if: ${{ github.event.inputs.launch-testnet == 'y' || github.event.label.name == 'launch-testnet' }}
    name: Launch Digital Ocean testnet
    runs-on: ubuntu-latest
    steps:
      - name: Launch testnet
        uses: maidsafe/sn_testnet_action@master
        with:
          do-token: ${{ secrets.DO_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-access-key-secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ssh-secret-key: ${{ secrets.SSH_SECRET_KEY  }}
          build-node: true
          node-count: ${{ github.event.inputs.node-count || 50 }}

  run-client-tests:
    name: Run Client tests
    runs-on: ubuntu-latest
    needs: [launch-testnet]
    if: ${{ always() && (github.event.inputs.run-client-tests == 'y' || github.event.label.name == 'run-client-tests') }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Set TESTNET_ID env
        shell: bash
        run: echo "TESTNET_ID=gha-testnet-$(echo ${{ github.event.pull_request.head.sha || github.sha }} | cut -c 1-7)" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Download network config
        shell: bash
        run: |
          mkdir -p ~/.safe/network_contacts
          wget https://safe-testnet-tool.s3.eu-west-2.amazonaws.com/${{ env.TESTNET_ID }}-network-contacts -O ~/.safe/network_contacts/default

      # a catchall to ensure any new client api tests are run (ideally any major new section should have its own test run)
      - name: Initital client tests...
        shell: bash
        # always joinable not actually needed here, but should speed up compilation as we've just built with it
        run: cargo test --release -- client_api --skip client_api::reg --skip client_api::file --skip client_api::transfer && sleep 5

      - name: Client reg tests
        shell: bash
        run: cargo test --release -- client_api::reg && sleep 5

      - name: Client file tests
        shell: bash
        run: cargo test --release -- client_api::file --test-threads=1 && sleep 5

      - name: Run example app for file API
        shell: bash
        run: cargo run --release --example client_files

  kill-testnet:
    name: Destroy Digital Ocean testnet
    runs-on: ubuntu-latest
    needs: [launch-testnet, run-client-tests]
    if: ${{ always() && (github.event.inputs.kill-testnet == 'y' || github.event.label.name == 'kill-testnet') }}
    steps:
      - name: Kill testnet
        uses: maidsafe/sn_testnet_action@master
        with:
          do-token: ${{ secrets.DO_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-access-key-secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          action: 'destroy'

  bump_version:
    runs-on: ubuntu-20.04
    needs: ["run-client-tests"]
    if: |
      github.repository_owner == 'maidsafe' &&
      !startsWith(github.event.head_commit.message, 'chore(release):')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          token: ${{ secrets.VERSION_BUMP_COMMIT_PAT }}
      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true
      - shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - shell: bash
        run: cargo install cargo-smart-release
      - shell: bash
        run: ./resources/scripts/bump_version.sh
      - name: push version bump commit and tags
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.VERSION_BUMP_COMMIT_PAT }}
          branch: main
          tags: true
